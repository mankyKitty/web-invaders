// Generated by psc-bundle 0.7.6.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };

  exports.numDiv = function (n1) {
    return function (n2) {
      return n1 / n2;
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.div = div;
      this.mod = mod;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                           
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };             
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };                   
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  }; 
  var moduloSemiringNumber = new ModuloSemiring(function () {
      return semiringNumber;
  }, $foreign.numDiv, function (_14) {
      return function (_15) {
          return 0.0;
      };
  });                                  
  var mod = function (dict) {
      return dict.mod;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var div = function (dict) {
      return dict.div;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
      return flip(compose(__dict_Semigroupoid_15));
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var boundedFn = function (__dict_Bounded_21) {
      return new Bounded(function (_29) {
          return bottom(__dict_Bounded_21);
      }, function (_28) {
          return top(__dict_Bounded_21);
      });
  }; 
  var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
      return new BooleanAlgebra(function () {
          return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
      }, function (fx) {
          return function (fy) {
              return function (a) {
                  return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
              };
          };
      }, function (fx) {
          return function (fy) {
              return function (a) {
                  return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
              };
          };
      }, function (fx) {
          return function (a) {
              return not(__dict_BooleanAlgebra_22)(fx(a));
          };
      });
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  var add = function (dict) {
      return dict.add;
  };
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["ModuloSemiring"] = ModuloSemiring;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["mod"] = mod;
  exports["div"] = div;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports[">>>"] = $greater$greater$greater;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semigroupArray"] = semigroupArray;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
  exports["moduloSemiringNumber"] = moduloSemiringNumber;
  exports["boundedBoolean"] = boundedBoolean;
  exports["boundedFn"] = boundedFn;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["booleanAlgebraFn"] = booleanAlgebraFn;
  exports["showInt"] = showInt;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_0) {
              if (_0 instanceof Nothing) {
                  return b;
              };
              if (_0 instanceof Just) {
                  return f(_0.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var $$throw = function (_0) {
      return $foreign.throwException($foreign.error(_0));
  };
  exports["throw"] = $$throw;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.ST

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifySTRef = function (ref) {
    return function (f) {
      return function () {
        /* jshint boss: true */
        return ref.value = f(ref.value);
      };
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["writeSTRef"] = $foreign.writeSTRef;
  exports["modifySTRef"] = $foreign.modifySTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["newSTRef"] = $foreign.newSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (__dict_BooleanAlgebra_2) {
      return new Prelude.Semigroup(function (_10) {
          return function (_11) {
              return Prelude.disj(__dict_BooleanAlgebra_2)(_10)(_11);
          };
      });
  };
  var runDisj = function (_0) {
      return _0;
  };
  var monoidDisj = function (__dict_BooleanAlgebra_4) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(__dict_BooleanAlgebra_4);
      }, Prelude.bottom(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;
 
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (__dict_Applicative_0) {
      return function (__dict_Foldable_1) {
          return function (f) {
              return foldr(__dict_Foldable_1)(function (_109) {
                  return Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(f(_109));
              })(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_26) {
      return function (__dict_Monoid_27) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_26)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_27))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_28) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_28);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (__dict_Foldable_38) {
      return function (__dict_BooleanAlgebra_39) {
          return function (p) {
              return function (_112) {
                  return Data_Monoid_Disj.runDisj(foldMap(__dict_Foldable_38)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_39))(function (_113) {
                      return Data_Monoid_Disj.Disj(p(_113));
                  })(_112));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["any"] = any;
  exports["traverse_"] = traverse_;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_2) {
          if (_2 instanceof Left) {
              return new Left(_2.value0);
          };
          if (_2 instanceof Right) {
              return new Right(f(_2.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _2.constructor.name ]);
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["functorEither"] = functorEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                  
  var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["htmlDocumentToNonElementParentNode"] = htmlDocumentToNonElementParentNode;;
 
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;;
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Window

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["document"] = $foreign.document;;
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.Node.NonElementParentNode

  exports.getElementById = function (id) {
    return function (node) {
      return function () {
        return node.getElementById(id);
      };
    };
  };
 
})(PS["DOM.Node.NonElementParentNode"] = PS["DOM.Node.NonElementParentNode"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  }; 
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];                              
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;;
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["DOM.Node.NonElementParentNode"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["getElementById"] = $foreign.getElementById;;
 
})(PS["DOM.Node.NonElementParentNode"] = PS["DOM.Node.NonElementParentNode"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var functorTuple = new Prelude.Functor(function (f) {
      return function (_31) {
          return new Tuple(_31.value0, f(_31.value1));
      };
  });
  exports["Tuple"] = Tuple;
  exports["functorTuple"] = functorTuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];     
  var $colon = $foreign.cons;
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports["filter"] = $foreign.filter;
  exports["cons"] = $foreign.cons;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.ST

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;;
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Contravariant = function (cmap) {
      this.cmap = cmap;
  };
  var cmap = function (dict) {
      return dict.cmap;
  };
  exports["Contravariant"] = Contravariant;
  exports["cmap"] = cmap;;
 
})(PS["Data.Functor.Contravariant"] = PS["Data.Functor.Contravariant"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Const = function (x) {
      return x;
  };
  var getConst = function (_0) {
      return _0;
  };
  var functorConst = new Prelude.Functor(function (_10) {
      return function (_11) {
          return _11;
      };
  });
  var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (_17) {
      return function (_18) {
          return _18;
      };
  });
  exports["Const"] = Const;
  exports["getConst"] = getConst;
  exports["functorConst"] = functorConst;
  exports["contravariantConst"] = contravariantConst;;
 
})(PS["Data.Const"] = PS["Data.Const"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_0) {
      return _0;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_23) {
          return f(_23);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_24) {
      return function (_25) {
          return _24(_25);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.toNumber = function (n) {
    return n;
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";            

  exports.cos = Math.cos;    

  exports.sin = Math.sin;    
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Math"];
  exports["sin"] = $foreign.sin;
  exports["cos"] = $foreign.cos;;
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];
  exports["toNumber"] = $foreign.toNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return Prelude[">>>"](Prelude.semigroupoidFn)(a2b)(Prelude[">>>"](Prelude.semigroupoidFn)(b2c)(c2d));
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;;
 
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (_0) {
          return new Data_Tuple.Tuple(a2b(_0.value0), _0.value1);
      };
  }, Prelude["<$>"](Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["second"] = second;
  exports["first"] = first;
  exports["strongFn"] = strongFn;;
 
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Profunctor = PS["Data.Profunctor"];     
  var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  var choiceFn = new Choice(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (_0) {
          if (_0 instanceof Data_Either.Left) {
              return Data_Either.Left.create(a2b(_0.value0));
          };
          if (_0 instanceof Data_Either.Right) {
              return new Data_Either.Right(_0.value0);
          };
          throw new Error("Failed pattern match at Data.Profunctor.Choice line 17, column 1 - line 22, column 1: " + [ a2b.constructor.name, _0.constructor.name ]);
      };
  }, Prelude["<$>"](Data_Either.functorEither));
  exports["Choice"] = Choice;
  exports["right"] = right;
  exports["left"] = left;
  exports["choiceFn"] = choiceFn;;
 
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var runStar = function (_3) {
      return _3;
  };
  var profunctorStar = function (__dict_Functor_1) {
      return new Data_Profunctor.Profunctor(function (f) {
          return function (g) {
              return function (_4) {
                  return Prelude[">>>"](Prelude.semigroupoidFn)(f)(Prelude[">>>"](Prelude.semigroupoidFn)(_4)(Prelude.map(__dict_Functor_1)(g)));
              };
          };
      });
  };
  var strongStar = function (__dict_Functor_0) {
      return new Data_Profunctor_Strong.Strong(function () {
          return profunctorStar(__dict_Functor_0);
      }, function (_5) {
          return function (_1) {
              return Prelude.map(__dict_Functor_0)(function (_0) {
                  return new Data_Tuple.Tuple(_0, _1.value1);
              })(_5(_1.value0));
          };
      }, function (_6) {
          return function (_2) {
              return Prelude.map(__dict_Functor_0)(Data_Tuple.Tuple.create(_2.value0))(_6(_2.value1));
          };
      });
  };
  exports["runStar"] = runStar;
  exports["profunctorStar"] = profunctorStar;
  exports["strongStar"] = strongStar;;
 
})(PS["Data.Profunctor.Star"] = PS["Data.Profunctor.Star"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Const = PS["Data.Const"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Lens_Types = PS["Data.Lens.Types"];     
  var view = function (l) {
      return function (s) {
          return Data_Const.getConst(Data_Profunctor_Star.runStar(l(Data_Const.Const))(s));
      };
  };
  var $up$dot = function (s) {
      return function (l) {
          return view(l)(s);
      };
  };
  var to = function (__dict_Contravariant_0) {
      return function (f) {
          return function (p) {
              return function (_0) {
                  return Data_Functor_Contravariant.cmap(__dict_Contravariant_0)(f)(Data_Profunctor_Star.runStar(p)(f(_0)));
              };
          };
      };
  };
  exports["to"] = to;
  exports["view"] = view;
  exports["^."] = $up$dot;;
 
})(PS["Data.Lens.Getter"] = PS["Data.Lens.Getter"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Identity = PS["Data.Identity"];     
  var Wander = function (__superclass_Data$dotProfunctor$dotChoice$dotChoice_1, __superclass_Data$dotProfunctor$dotStrong$dotStrong_0, wander) {
      this["__superclass_Data.Profunctor.Choice.Choice_1"] = __superclass_Data$dotProfunctor$dotChoice$dotChoice_1;
      this["__superclass_Data.Profunctor.Strong.Strong_0"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_0;
      this.wander = wander;
  };
  var wanderFunction = new Wander(function () {
      return Data_Profunctor_Choice.choiceFn;
  }, function () {
      return Data_Profunctor_Strong.strongFn;
  }, function (t) {
      return function (f) {
          return function (s) {
              return Data_Identity.runIdentity(t(Data_Identity.applicativeIdentity)(function (_1) {
                  return Data_Identity.Identity(f(_1));
              })(s));
          };
      };
  });
  var wander = function (dict) {
      return dict.wander;
  };
  exports["Wander"] = Wander;
  exports["wander"] = wander;
  exports["wanderFunction"] = wanderFunction;;
 
})(PS["Data.Lens.Internal.Wander"] = PS["Data.Lens.Internal.Wander"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Internal_Shop = PS["Data.Lens.Internal.Shop"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var lens$prime = function (to) {
      return function (__dict_Strong_0) {
          return function (pab) {
              return Data_Profunctor.dimap(__dict_Strong_0["__superclass_Data.Profunctor.Profunctor_0"]())(to)(function (_0) {
                  return _0.value1(_0.value0);
              })(Data_Profunctor_Strong.first(__dict_Strong_0)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (__dict_Strong_1) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(__dict_Strong_1);
          };
      };
  };
  exports["lens"] = lens;;
 
})(PS["Data.Lens.Lens"] = PS["Data.Lens.Lens"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Lens_Types = PS["Data.Lens.Types"];     
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Prelude["const"](b));
      };
  };
  var $dot$tilde = set;
  var $percent$tilde = over;
  var $plus$plus$tilde = function (__dict_Semigroup_2) {
      return function (p) {
          return function (_3) {
              return over(p)(Prelude.flip(Prelude.append(__dict_Semigroup_2))(_3));
          };
      };
  };
  var $plus$tilde = function (__dict_Semiring_3) {
      return function (p) {
          return function (_4) {
              return over(p)(Prelude.add(__dict_Semiring_3)(_4));
          };
      };
  };
  exports["set"] = set;
  exports["over"] = over;
  exports["++~"] = $plus$plus$tilde;
  exports["+~"] = $plus$tilde;
  exports[".~"] = $dot$tilde;
  exports["%~"] = $percent$tilde;;
 
})(PS["Data.Lens.Setter"] = PS["Data.Lens.Setter"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Prelude = PS["Prelude"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Types = PS["Data.Lens.Types"];     
  var traversed = function (__dict_Traversable_0) {
      return function (__dict_Wander_1) {
          return Data_Lens_Internal_Wander.wander(__dict_Wander_1)(function (__dict_Applicative_2) {
              return Data_Traversable.traverse(__dict_Traversable_0)(__dict_Applicative_2);
          });
      };
  };
  exports["traversed"] = traversed;;
 
})(PS["Data.Lens.Traversal"] = PS["Data.Lens.Traversal"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];     
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function (f) {
      return function (b) {
          return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
              var _2 = Data_Array_ST.emptySTArray();
              var _1 = Control_Monad_ST.newSTRef(b)();
              (function () {
                  while (!(function __do() {
                      var _0 = Control_Monad_ST.readSTRef(_1)();
                      return (function () {
                          var _6 = f(_0);
                          if (_6 instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                          };
                          if (_6 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Data_Array_ST.pushSTArray(_2)(_6.value0.value0)();
                                  Control_Monad_ST.writeSTRef(_1)(_6.value0.value1)();
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                              };
                          };
                          throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [ _6.constructor.name ]);
                      })()();
                  })()) {

                  };
                  return {};
              })();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_2)();
          }));
      };
  });
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;;
 
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.clearRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.clearRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.font = function(ctx) {
      return function() {
          return ctx.font;
      };
  };

  exports.setFont = function(fontspec) {
      return function(ctx) {
          return function() {
              ctx.font = fontspec;
              return ctx;
          };
      };
  };

  exports.strokeText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.strokeText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };

 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Prelude = PS["Prelude"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["strokeText"] = $foreign.strokeText;
  exports["setFont"] = $foreign.setFont;
  exports["clearRect"] = $foreign.clearRect;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["getContext2D"] = $foreign.getContext2D;;
 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // module Signal.Time

  function now() {
    var perf = typeof performance !== 'undefined' ? performance : null,
        proc = typeof process !== 'undefined' ? process : null;
    return (
      perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
      (proc && proc.hrtime && function() {
        var t = proc.hrtime();
        return (t[0] * 1e9 + t[1]) / 1e6;
      }) ||
      Date.now
    ).call(perf);
  };

  exports.now = now;
 
})(PS["Signal.Time"] = PS["Signal.Time"] || {});
(function(exports) {
  // module Signal

  exports.constant =
    function constant(initial) {
      var subs = [];
      var val = initial;
      var sig = {
        subscribe: function(sub) {
          subs.push(sub);
          sub(val);
        },
        get: function() { return val; },
        set: function(newval) {
          val = newval;
          subs.forEach(function(sub) { sub(newval); });
        }
      };
      return sig;
    };

  exports.mapSigP =
    function mapSigP(constant) {
      return function(fun) {
        return function(sig) {
          var out = constant(fun(sig.get()));
          sig.subscribe(function(val) { out.set(fun(val)); });
          return out;
        };
      };
    };


  exports.applySigP =
    function applySigP(constant) {
      return function(fun) {
        return function(sig) {
          var out = constant(fun.get()(sig.get()));
          var produce = function() { out.set(fun.get()(sig.get())); };
          fun.subscribe(produce);
          sig.subscribe(produce);
          return out;
        };
      };
    };

  exports.sampleOnP =
    function sampleOnP(constant) {
      return function(sig1) {
        return function(sig2) {
          var out = constant(sig2.get());
          sig1.subscribe(function() {
            out.set(sig2.get());
          });
          return out;
        };
      };
    };

  exports.runSignal =
    function runSignal(sig) {
      return function() {
        sig.subscribe(function(val) {
          val();
        });
        return {};
      };
    };
 
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Signal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];               
  var sampleOn = $foreign.sampleOnP($foreign.constant);
  var mapSig = $foreign.mapSigP($foreign.constant);
  var functorSignal = new Prelude.Functor(mapSig);
  var applySig = $foreign.applySigP($foreign.constant);
  var applySignal = new Prelude.Apply(function () {
      return functorSignal;
  }, applySig);
  exports["sampleOn"] = sampleOn;
  exports["functorSignal"] = functorSignal;
  exports["applySignal"] = applySignal;
  exports["runSignal"] = $foreign.runSignal;
  exports["constant"] = $foreign.constant;;
 
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Signal.Time"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Timer = PS["Control.Timer"];
  var Signal = PS["Signal"];
  exports["now"] = $foreign.now;;
 
})(PS["Signal.Time"] = PS["Signal.Time"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var ranger = function (k) {
      return function (n) {
          var numnum = function (kP) {
              var _19 = kP < n;
              if (_19) {
                  return new Data_Maybe.Just(Data_Tuple.Tuple.create(kP)(kP + 1.0));
              };
              if (!_19) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Sprite line 57, column 5 - line 60, column 1: " + [ _19.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(numnum)(k);
      };
  };
  var _Y = function (__dict_Strong_0) {
      return Data_Lens_Lens.lens(function (_9) {
          return _9.y;
      })(function (_10) {
          return function (_11) {
              var _25 = {};
              for (var _26 in _10) {
                  if (_10.hasOwnProperty(_26)) {
                      _25[_26] = _10[_26];
                  };
              };
              _25.y = _11;
              return _25;
          };
      })(__dict_Strong_0);
  };
  var _X = function (__dict_Strong_1) {
      return Data_Lens_Lens.lens(function (_6) {
          return _6.x;
      })(function (_7) {
          return function (_8) {
              var _27 = {};
              for (var _28 in _7) {
                  if (_7.hasOwnProperty(_28)) {
                      _27[_28] = _7[_28];
                  };
              };
              _27.x = _8;
              return _27;
          };
      })(__dict_Strong_1);
  };
  exports["ranger"] = ranger;
  exports["_Y"] = _Y;
  exports["_X"] = _X;;
 
})(PS["Sprite"] = PS["Sprite"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var $$Math = PS["Math"];
  var Data_Array = PS["Data.Array"];
  var Data_Lens = PS["Data.Lens"];
  var Signal_Time = PS["Signal.Time"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Sprite = PS["Sprite"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Const = PS["Data.Const"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];     
  var Left = (function () {
      function Left() {

      };
      Left.value = new Left();
      return Left;
  })();
  var Right = (function () {
      function Right() {

      };
      Right.value = new Right();
      return Right;
  })();
  var Mob = (function () {
      function Mob(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Mob.create = function (value0) {
          return function (value1) {
              return new Mob(value0, value1);
          };
      };
      return Mob;
  })();
  var mobsShoot = function (last) {
      return function (curr) {
          return curr - last >= 300.0;
      };
  };
  var mobHeading = function (__dict_Strong_0) {
      return Data_Lens_Lens.lens(function (_8) {
          return _8.value0;
      })(function (_9) {
          return function (h) {
              return new Mob(h, _9.value1);
          };
      })(__dict_Strong_0);
  };
  var mobCoord = function (__dict_Strong_1) {
      return Data_Lens_Lens.lens(function (_10) {
          return _10.value1;
      })(function (_11) {
          return function (c) {
              return new Mob(_11.value0, c);
          };
      })(__dict_Strong_1);
  };
  var mobX = function (__dict_Strong_2) {
      return function (_36) {
          return mobCoord(__dict_Strong_2)(Sprite._X(__dict_Strong_2)(_36));
      };
  };
  var moveMobs = function (vel) {
      return function (wub) {
          return function (box) {
              var setJink = function (_12) {
                  if (_12.value0 instanceof Right) {
                      var _26 = Data_Lens_Getter["^."](_12.value1)(Sprite._X(Data_Profunctor_Star.strongStar(Data_Const.functorConst))) + vel >= box.w;
                      if (_26) {
                          return Data_Lens_Setter["%~"](mobX(Data_Profunctor_Strong.strongFn))(function (x) {
                              return x - vel;
                          })(Data_Lens_Setter[".~"](mobHeading(Data_Profunctor_Strong.strongFn))(Left.value)(_12));
                      };
                      if (!_26) {
                          return Data_Lens_Setter["%~"](mobX(Data_Profunctor_Strong.strongFn))(function (_4) {
                              return _4 + vel;
                          })(_12);
                      };
                      throw new Error("Failed pattern match at Mobs line 53, column 5 - line 58, column 5: " + [ _26.constructor.name ]);
                  };
                  if (_12.value0 instanceof Left) {
                      var _29 = Data_Lens_Getter["^."](_12.value1)(Sprite._X(Data_Profunctor_Star.strongStar(Data_Const.functorConst))) - vel <= 0.0;
                      if (_29) {
                          return Data_Lens_Setter["%~"](mobX(Data_Profunctor_Strong.strongFn))(function (_5) {
                              return _5 + vel;
                          })(Data_Lens_Setter[".~"](mobHeading(Data_Profunctor_Strong.strongFn))(Right.value)(_12));
                      };
                      if (!_29) {
                          return Data_Lens_Setter["%~"](mobX(Data_Profunctor_Strong.strongFn))(function (x) {
                              return x - vel;
                          })(_12);
                      };
                      throw new Error("Failed pattern match at Mobs line 53, column 5 - line 58, column 5: " + [ _29.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Mobs line 53, column 5 - line 58, column 5: " + [ _12.constructor.name ]);
              };
              return Prelude.map(Prelude.functorArray)(function (_37) {
                  return wub(setJink(_37));
              });
          };
      };
  };
  var mobY = function (__dict_Strong_3) {
      return function (_38) {
          return mobCoord(__dict_Strong_3)(Sprite._Y(__dict_Strong_3)(_38));
      };
  };
  var wibble = function (m) {
      return Data_Lens_Setter["%~"](mobY(Data_Profunctor_Strong.strongFn))(function (_1) {
          return _1 + -$$Math.cos(Data_Lens_Getter["^."](m)(function (_39) {
              return mobX(Data_Profunctor_Star.strongStar(Data_Const.functorConst))(Data_Lens_Getter.to(Data_Const.contravariantConst)(function (_0) {
                  return _0 / 100.0;
              })(_39));
          })) * 5.0;
      })(m);
  };
  var wobble = function (m) {
      return Data_Lens_Setter["%~"](mobY(Data_Profunctor_Strong.strongFn))(function (_3) {
          return _3 + $$Math.sin(Data_Lens_Getter["^."](m)(function (_40) {
              return mobX(Data_Profunctor_Star.strongStar(Data_Const.functorConst))(Data_Lens_Getter.to(Data_Const.contravariantConst)(function (_2) {
                  return _2 / 100.0;
              })(_40));
          })) * 5.0;
      })(m);
  };
  var addMobs = function (n) {
      return function (buffer) {
          return function (start) {
              return Prelude.bind(Prelude.bindArray)(Data_Array.replicate(n)(start))(function (_7) {
                  return Prelude.bind(Prelude.bindArray)(Sprite.ranger(1.0)(Data_Int.toNumber(n)))(function (_6) {
                      return Prelude.pure(Prelude.applicativeArray)(Mob.create(Right.value)((function () {
                          var _34 = {};
                          for (var _35 in _7) {
                              if (_7.hasOwnProperty(_35)) {
                                  _34[_35] = _7[_35];
                              };
                          };
                          _34.y = _7.y + _6 * buffer;
                          _34.x = _7.x + _6 * buffer;
                          return _34;
                      })()));
                  });
              });
          };
      };
  };
  exports["Mob"] = Mob;
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["moveMobs"] = moveMobs;
  exports["wobble"] = wobble;
  exports["wibble"] = wibble;
  exports["addMobs"] = addMobs;
  exports["mobsShoot"] = mobsShoot;
  exports["mobY"] = mobY;
  exports["mobX"] = mobX;
  exports["mobCoord"] = mobCoord;
  exports["mobHeading"] = mobHeading;;
 
})(PS["Mobs"] = PS["Mobs"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Traversal = PS["Data.Lens.Traversal"];
  var Prelude = PS["Prelude"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Signal_Time = PS["Signal.Time"];
  var Sprite = PS["Sprite"];
  var Mobs = PS["Mobs"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Traversable = PS["Data.Traversable"];
  var playerScore = function (__dict_Strong_1) {
      return Data_Lens_Lens.lens(function (_6) {
          return _6.playerScore;
      })(function (_7) {
          return function (_8) {
              var _53 = {};
              for (var _54 in _7) {
                  if (_7.hasOwnProperty(_54)) {
                      _53[_54] = _7[_54];
                  };
              };
              _53.playerScore = _8;
              return _53;
          };
      })(__dict_Strong_1);
  };
  var playerLoc = function (__dict_Strong_2) {
      return Data_Lens_Lens.lens(function (_39) {
          return _39.playerLoc;
      })(function (_40) {
          return function (_41) {
              var _55 = {};
              for (var _56 in _40) {
                  if (_40.hasOwnProperty(_56)) {
                      _55[_56] = _40[_56];
                  };
              };
              _55.playerLoc = _41;
              return _55;
          };
      })(__dict_Strong_2);
  };
  var playerLives = function (__dict_Strong_3) {
      return Data_Lens_Lens.lens(function (_9) {
          return _9.playerLives;
      })(function (_10) {
          return function (_11) {
              var _57 = {};
              for (var _58 in _10) {
                  if (_10.hasOwnProperty(_58)) {
                      _57[_58] = _10[_58];
                  };
              };
              _57.playerLives = _11;
              return _57;
          };
      })(__dict_Strong_3);
  };
  var playerBullets = function (__dict_Strong_5) {
      return Data_Lens_Lens.lens(function (_48) {
          return _48.playerBullets;
      })(function (_49) {
          return function (_50) {
              var _61 = {};
              for (var _62 in _49) {
                  if (_49.hasOwnProperty(_62)) {
                      _61[_62] = _49[_62];
                  };
              };
              _61.playerBullets = _50;
              return _61;
          };
      })(__dict_Strong_5);
  };
  var pBullets = function (__dict_Wander_7) {
      return function (_85) {
          return playerBullets(__dict_Wander_7["__superclass_Data.Profunctor.Strong.Strong_0"]())(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(__dict_Wander_7)(_85));
      };
  };
  var mobs = function (__dict_Strong_9) {
      return Data_Lens_Lens.lens(function (_24) {
          return _24.mobs;
      })(function (_25) {
          return function (_26) {
              var _67 = {};
              for (var _68 in _25) {
                  if (_25.hasOwnProperty(_68)) {
                      _67[_68] = _25[_68];
                  };
              };
              _67.mobs = _26;
              return _67;
          };
      })(__dict_Strong_9);
  };
  var mobWub = function (__dict_Strong_10) {
      return Data_Lens_Lens.lens(function (_12) {
          return _12.mobWub;
      })(function (_13) {
          return function (_14) {
              var _69 = {};
              for (var _70 in _13) {
                  if (_13.hasOwnProperty(_70)) {
                      _69[_70] = _13[_70];
                  };
              };
              _69.mobWub = _14;
              return _69;
          };
      })(__dict_Strong_10);
  };
  var mobBullets = function (__dict_Strong_12) {
      return Data_Lens_Lens.lens(function (_18) {
          return _18.mobBullets;
      })(function (_19) {
          return function (_20) {
              var _73 = {};
              for (var _74 in _19) {
                  if (_19.hasOwnProperty(_74)) {
                      _73[_74] = _19[_74];
                  };
              };
              _73.mobBullets = _20;
              return _73;
          };
      })(__dict_Strong_12);
  };
  var mBullets = function (__dict_Wander_14) {
      return function (_86) {
          return mobBullets(__dict_Wander_14["__superclass_Data.Profunctor.Strong.Strong_0"]())(Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(__dict_Wander_14)(_86));
      };
  };
  var lastMobFired = function (__dict_Strong_15) {
      return Data_Lens_Lens.lens(function (_30) {
          return _30.lastMobFired;
      })(function (_31) {
          return function (_32) {
              var _77 = {};
              for (var _78 in _31) {
                  if (_31.hasOwnProperty(_78)) {
                      _77[_78] = _31[_78];
                  };
              };
              _77.lastMobFired = _32;
              return _77;
          };
      })(__dict_Strong_15);
  };
  var lastFired = function (__dict_Strong_16) {
      return Data_Lens_Lens.lens(function (_27) {
          return _27.lastFired;
      })(function (_28) {
          return function (_29) {
              var _79 = {};
              for (var _80 in _28) {
                  if (_28.hasOwnProperty(_80)) {
                      _79[_80] = _28[_80];
                  };
              };
              _79.lastFired = _29;
              return _79;
          };
      })(__dict_Strong_16);
  };
  var gameFinished = function (__dict_Strong_17) {
      return Data_Lens_Lens.lens(function (_0) {
          return _0.gameFinished;
      })(function (_1) {
          return function (_2) {
              var _81 = {};
              for (var _82 in _1) {
                  if (_1.hasOwnProperty(_82)) {
                      _81[_82] = _1[_82];
                  };
              };
              _81.gameFinished = _2;
              return _81;
          };
      })(__dict_Strong_17);
  };
  var context2d = function (__dict_Strong_18) {
      return Data_Lens_Lens.lens(function (_33) {
          return _33.ctx;
      })(function (_34) {
          return function (_35) {
              var _83 = {};
              for (var _84 in _34) {
                  if (_34.hasOwnProperty(_84)) {
                      _83[_84] = _34[_84];
                  };
              };
              _83.ctx = _35;
              return _83;
          };
      })(__dict_Strong_18);
  };
  exports["pBullets"] = pBullets;
  exports["playerBullets"] = playerBullets;
  exports["playerLoc"] = playerLoc;
  exports["context2d"] = context2d;
  exports["lastMobFired"] = lastMobFired;
  exports["lastFired"] = lastFired;
  exports["mobs"] = mobs;
  exports["mBullets"] = mBullets;
  exports["mobBullets"] = mobBullets;
  exports["mobWub"] = mobWub;
  exports["playerLives"] = playerLives;
  exports["playerScore"] = playerScore;
  exports["gameFinished"] = gameFinished;;
 
})(PS["GameState"] = PS["GameState"] || {});
(function(exports) {
  // module Signal.DOM

  exports.keyPressedP =
    function keyPressedP(constant) {
      return function(keyCode) {
        return function() {
          var out = constant(false);
          window.addEventListener("keydown", function(e) {
            if (e.keyCode === keyCode) out.set(true);
          });
          window.addEventListener("keyup", function(e) {
            if (e.keyCode === keyCode) out.set(false);
          });
          return out;
        };
      };
    };

  exports.animationFrameP =
    function animationFrameP(constant) {
      return function(now) {
        return function() {
          var requestAnimFrame, cancelAnimFrame;
          if (window.requestAnimationFrame) {
            requestAnimFrame = window.requestAnimationFrame;
            cancelAnimFrame = window.cancelAnimationFrame;
          } else if (window.mozRequestAnimationFrame) {
            requestAnimFrame = window.mozRequestAnimationFrame;
            cancelAnimFrame = window.mozCancelAnimationFrame;
          } else if (window.webkitRequestAnimationFrame) {
            requestAnimFrame = window.webkitRequestAnimationFrame;
            cancelAnimFrame = window.webkitCancelAnimationFrame;
          } else if (window.msRequestAnimationFrame) {
            requestAnimFrame = window.msRequestAnimationFrame;
            cancelAnimFrame = window.msCancelAnimationFrame;
          } else if (window.oRequestAnimationFrame) {
            requestAnimFrame = window.oRequestAnimationFrame;
            cancelAnimFrame = window.oCancelAnimationFrame;
          } else {
            requestAnimFrame = function(cb) {setTimeout(function() {cb(now())}, 1000/60)};
            cancelAnimFrame = window.clearTimeout;
          }
          var out = constant(now());
          requestAnimFrame(function tick(t) {
            out.set(t); requestAnimFrame(tick);
          });
          return out;
        };
      };
    };
 
})(PS["Signal.DOM"] = PS["Signal.DOM"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Signal.DOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Timer = PS["Control.Timer"];
  var DOM = PS["DOM"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];
  var Signal_Time = PS["Signal.Time"];                     
  var keyPressed = $foreign.keyPressedP(Signal.constant);
  var animationFrame = $foreign.animationFrameP(Signal.constant)(Signal_Time.now);
  exports["keyPressed"] = keyPressed;
  exports["animationFrame"] = animationFrame;;
 
})(PS["Signal.DOM"] = PS["Signal.DOM"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];
  var Signal_DOM = PS["Signal.DOM"];
  var Signal_Time = PS["Signal.Time"];
  var Control_Timer = PS["Control.Timer"];
  var Data_Lens = PS["Data.Lens"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];     
  var upKeyCode = 38;
  var up = function (__dict_Strong_0) {
      return Data_Lens_Lens.lens(function (_6) {
          return _6.up;
      })(function (_7) {
          return function (_8) {
              var _30 = {};
              for (var _31 in _7) {
                  if (_7.hasOwnProperty(_31)) {
                      _30[_31] = _7[_31];
                  };
              };
              _30.up = _8;
              return _30;
          };
      })(__dict_Strong_0);
  };
  var spaceKeyCode = 32;
  var space = function (__dict_Strong_1) {
      return Data_Lens_Lens.lens(function (_12) {
          return _12.space;
      })(function (_13) {
          return function (_14) {
              var _32 = {};
              for (var _33 in _13) {
                  if (_13.hasOwnProperty(_33)) {
                      _32[_33] = _13[_33];
                  };
              };
              _32.space = _14;
              return _32;
          };
      })(__dict_Strong_1);
  };
  var rightKeyCode = 39;
  var right = function (__dict_Strong_2) {
      return Data_Lens_Lens.lens(function (_3) {
          return _3.right;
      })(function (_4) {
          return function (_5) {
              var _34 = {};
              for (var _35 in _4) {
                  if (_4.hasOwnProperty(_35)) {
                      _34[_35] = _4[_35];
                  };
              };
              _34.right = _5;
              return _34;
          };
      })(__dict_Strong_2);
  };
  var mkInput = function (_18) {
      return function (_19) {
          return function (_20) {
              return function (_21) {
                  return function (_22) {
                      return function (_23) {
                          return {
                              left: _18, 
                              right: _19, 
                              up: _20, 
                              down: _21, 
                              space: _22, 
                              frame: _23
                          };
                      };
                  };
              };
          };
      };
  };
  var limitShooting = Signal_DOM.keyPressed(spaceKeyCode);
  var leftKeyCode = 37;
  var left = function (__dict_Strong_3) {
      return Data_Lens_Lens.lens(function (_0) {
          return _0.left;
      })(function (_1) {
          return function (_2) {
              var _36 = {};
              for (var _37 in _1) {
                  if (_1.hasOwnProperty(_37)) {
                      _36[_37] = _1[_37];
                  };
              };
              _36.left = _2;
              return _36;
          };
      })(__dict_Strong_3);
  };
  var frame = function (__dict_Strong_4) {
      return Data_Lens_Lens.lens(function (_15) {
          return _15.frame;
      })(function (_16) {
          return function (_17) {
              var _38 = {};
              for (var _39 in _16) {
                  if (_16.hasOwnProperty(_39)) {
                      _38[_39] = _16[_39];
                  };
              };
              _38.frame = _17;
              return _38;
          };
      })(__dict_Strong_4);
  };
  var downKeyCode = 40;
  var readInput = function __do() {
      var _29 = Signal_DOM.keyPressed(leftKeyCode)();
      var _28 = Signal_DOM.keyPressed(rightKeyCode)();
      var _27 = Signal_DOM.keyPressed(upKeyCode)();
      var _26 = Signal_DOM.keyPressed(downKeyCode)();
      var _25 = limitShooting();
      var _24 = Signal_DOM.animationFrame();
      return Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<$>"](Signal.functorSignal)(mkInput)(_29))(_28))(_27))(_26))(_25))(_24);
  };
  var down = function (__dict_Strong_5) {
      return Data_Lens_Lens.lens(function (_9) {
          return _9.down;
      })(function (_10) {
          return function (_11) {
              var _46 = {};
              for (var _47 in _10) {
                  if (_10.hasOwnProperty(_47)) {
                      _46[_47] = _10[_47];
                  };
              };
              _46.down = _11;
              return _46;
          };
      })(__dict_Strong_5);
  };
  exports["readInput"] = readInput;
  exports["mkInput"] = mkInput;
  exports["frame"] = frame;
  exports["space"] = space;
  exports["down"] = down;
  exports["up"] = up;
  exports["right"] = right;
  exports["left"] = left;
  exports["limitShooting"] = limitShooting;
  exports["spaceKeyCode"] = spaceKeyCode;
  exports["rightKeyCode"] = rightKeyCode;
  exports["leftKeyCode"] = leftKeyCode;
  exports["downKeyCode"] = downKeyCode;
  exports["upKeyCode"] = upKeyCode;;
 
})(PS["Input"] = PS["Input"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.drawImageFromElement = function(ctx) {
    return function(elem) {
      return function(x) {
        return function(y) {
          return function() {
            ctx.drawImage(elem, x, y);
            return ctx;
          };
        };
      };
    };
  };
 
})(PS["Utils"] = PS["Utils"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Utils"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Prelude = PS["Prelude"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Sprite = PS["Sprite"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Const = PS["Data.Const"];     
  var rectInter = function (aXY) {
      return function (aWH) {
          return function (bXY) {
              return function (bWH) {
                  return aXY.x < bXY.x + bWH.w && (aXY.x + aWH.w > bXY.x && (aXY.y < bXY.y + bWH.h && aXY.y + aWH.h > bXY.y));
              };
          };
      };
  };
  exports["rectInter"] = rectInter;
  exports["drawImageFromElement"] = $foreign.drawImageFromElement;;
 
})(PS["Utils"] = PS["Utils"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_Node_NonElementParentNode = PS["DOM.Node.NonElementParentNode"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Nullable = PS["Data.Nullable"];
  var Control_Timer = PS["Control.Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Signal = PS["Signal"];
  var Signal_Time = PS["Signal.Time"];
  var Signal_DOM = PS["Signal.DOM"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Sprite = PS["Sprite"];
  var Utils = PS["Utils"];
  var Input = PS["Input"];
  var Mobs = PS["Mobs"];
  var GameState = PS["GameState"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Const = PS["Data.Const"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];     
  var requestContext = function (elemId) {
      var err = Control_Monad_Eff_Exception["throw"]("Unable to find Canvas element with #:" + elemId);
      return Prelude[">>="](Control_Monad_Eff.bindEff)(Graphics_Canvas.getCanvasElementById(elemId))(Data_Maybe.maybe(err)(Graphics_Canvas.getContext2D));
  };
  var renderGameOver = function (g) {
      return function __do() {
          Graphics_Canvas.strokeText(Data_Lens_Getter["^."](g)(GameState.context2d(Data_Profunctor_Star.strongStar(Data_Const.functorConst))))("GAME OVER!")(20.0)(240.0)();
          Graphics_Canvas.strokeText(Data_Lens_Getter["^."](g)(GameState.context2d(Data_Profunctor_Star.strongStar(Data_Const.functorConst))))("Refresh to play again")(20.0)(260.0)();
          return Prelude.unit;
      };
  };
  var playerStartLoc = {
      y: 440.0, 
      x: 170.0
  };
  var playerRect = {
      w: 43.0, 
      h: 43.0
  };
  var playerMoveDist = 6.0;
  var moveCoordByInput = function (dist) {
      return function (_13) {
          return function (box) {
              return function (c) {
                  var atMin = function (dir) {
                      return function (p) {
                          var _22 = dir && p - dist <= 0.0;
                          if (_22) {
                              return p;
                          };
                          if (!_22) {
                              return p - dist;
                          };
                          throw new Error("Failed pattern match at Main line 112, column 9 - line 113, column 9: " + [ _22.constructor.name ]);
                      };
                  };
                  var xLDist = atMin(_13.left)(c.x);
                  var yUDist = atMin(_13.up)(c.y);
                  var atMax = function (dir) {
                      return function (m) {
                          return function (p) {
                              var _23 = dir && p + dist >= m;
                              if (_23) {
                                  return p;
                              };
                              if (!_23) {
                                  return p + dist;
                              };
                              throw new Error("Failed pattern match at Main line 110, column 1 - line 111, column 1: " + [ _23.constructor.name ]);
                          };
                      };
                  };
                  var xRDist = atMax(_13.right)(box.w)(c.x);
                  var yDDist = atMax(_13.down)(box.h)(c.y);
                  var mv = function (_14) {
                      return function (_15) {
                          return function (_16) {
                              return function (_17) {
                                  if (_14 && (!_15 && (_16 && !_17))) {
                                      var _28 = {};
                                      for (var _29 in c) {
                                          if (c.hasOwnProperty(_29)) {
                                              _28[_29] = c[_29];
                                          };
                                      };
                                      _28.x = xLDist;
                                      _28.y = yUDist;
                                      return _28;
                                  };
                                  if (_14 && (!_15 && (!_16 && _17))) {
                                      var _30 = {};
                                      for (var _31 in c) {
                                          if (c.hasOwnProperty(_31)) {
                                              _30[_31] = c[_31];
                                          };
                                      };
                                      _30.x = xLDist;
                                      _30.y = yDDist;
                                      return _30;
                                  };
                                  if (!_14 && (_15 && (_16 && !_17))) {
                                      var _32 = {};
                                      for (var _33 in c) {
                                          if (c.hasOwnProperty(_33)) {
                                              _32[_33] = c[_33];
                                          };
                                      };
                                      _32.x = xRDist;
                                      _32.y = yUDist;
                                      return _32;
                                  };
                                  if (!_14 && (_15 && (!_16 && _17))) {
                                      var _34 = {};
                                      for (var _35 in c) {
                                          if (c.hasOwnProperty(_35)) {
                                              _34[_35] = c[_35];
                                          };
                                      };
                                      _34.x = xRDist;
                                      _34.y = yDDist;
                                      return _34;
                                  };
                                  if (_14 && (!_15 && (!_16 && !_17))) {
                                      var _36 = {};
                                      for (var _37 in c) {
                                          if (c.hasOwnProperty(_37)) {
                                              _36[_37] = c[_37];
                                          };
                                      };
                                      _36.x = xLDist;
                                      return _36;
                                  };
                                  if (!_14 && (_15 && (!_16 && !_17))) {
                                      var _38 = {};
                                      for (var _39 in c) {
                                          if (c.hasOwnProperty(_39)) {
                                              _38[_39] = c[_39];
                                          };
                                      };
                                      _38.x = xRDist;
                                      return _38;
                                  };
                                  if (!_14 && (!_15 && (_16 && !_17))) {
                                      var _40 = {};
                                      for (var _41 in c) {
                                          if (c.hasOwnProperty(_41)) {
                                              _40[_41] = c[_41];
                                          };
                                      };
                                      _40.y = yUDist;
                                      return _40;
                                  };
                                  if (!_14 && (!_15 && (!_16 && _17))) {
                                      var _42 = {};
                                      for (var _43 in c) {
                                          if (c.hasOwnProperty(_43)) {
                                              _42[_43] = c[_43];
                                          };
                                      };
                                      _42.y = yDDist;
                                      return _42;
                                  };
                                  return c;
                              };
                          };
                      };
                  };
                  return mv(_13.left)(_13.right)(_13.up)(_13.down);
              };
          };
      };
  };
  var mobRect = {
      w: 24.0, 
      h: 35.0
  };
  var mBulletRect = {
      w: 10.0, 
      h: 12.0
  };
  var getElemById = function (str) {
      return function (ne) {
          return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_Node_NonElementParentNode.getElementById(str)(ne));
      };
  };
  var loadImg = function (s) {
      return function (dom) {
          return Prelude[">>="](Control_Monad_Eff.bindEff)(getElemById(s)(dom))(Data_Maybe.maybe(Control_Monad_Eff_Exception["throw"]("Couldn't load: " + s))(Prelude.pure(Control_Monad_Eff.applicativeEff)));
      };
  };
  var getDocumentNode = Prelude["<$>"](Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToNonElementParentNode)(Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document));
  var drawElemAt = function (c) {
      return function (e) {
          return function (cp) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Utils.drawImageFromElement(c)(e)(cp.x)(cp.y));
          };
      };
  };
  var render = function (gameSt) {
      var ctx = Data_Lens_Getter["^."](gameSt)(GameState.context2d(Data_Profunctor_Star.strongStar(Data_Const.functorConst)));
      var dMany_ = function (img) {
          return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(drawElemAt(ctx)(img));
      };
      return function __do() {
          Graphics_Canvas.clearRect(ctx)(gameSt.screen)();
          Graphics_Canvas.setFillStyle("#000000")(ctx)();
          Graphics_Canvas.strokeText(ctx)("Score: " + Prelude.show(Prelude.showInt)(gameSt.playerScore))(20.0)(40.0)();
          Graphics_Canvas.strokeText(ctx)("Died: " + Prelude.show(Prelude.showInt)(gameSt.playerLives))(20.0)(70.0)();
          drawElemAt(ctx)(gameSt.playerImg)(gameSt.playerLoc)();
          dMany_(gameSt.playerBulletImg)(gameSt.playerBullets)();
          dMany_(gameSt.mobBulletImg)(gameSt.mobBullets)();
          return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(function (m) {
              return drawElemAt(ctx)(gameSt.mobsImg)(Data_Lens_Getter["^."](m)(Mobs.mobCoord(Data_Profunctor_Star.strongStar(Data_Const.functorConst))));
          })(Data_Lens_Getter["^."](gameSt)(GameState.mobs(Data_Profunctor_Star.strongStar(Data_Const.functorConst))))();
      };
  };
  var createMobBullets = (function () {
      var mkBullet = function (c) {
          return {
              x: c.x, 
              y: c.y
          };
      };
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (_12) {
          return function (acc) {
              return Data_Array[":"](mkBullet(_12.value1))(acc);
          };
      })([  ]);
  })();
  var canvasRect = {
      x: 0.0, 
      y: 0.0, 
      w: 320.0, 
      h: 480.0
  };
  var startState = function (ctx) {
      return function (ship) {
          return function (bImg) {
              return function (mImg) {
                  return function (mbImg) {
                      return {
                          ctx: ctx, 
                          screen: canvasRect, 
                          playerLoc: playerStartLoc, 
                          playerImg: ship, 
                          playerBulletImg: bImg, 
                          playerBullets: [  ], 
                          playerScore: 0, 
                          playerLives: 0, 
                          mobBullets: [  ], 
                          mobCount: 7, 
                          mobs: Mobs.addMobs(7)(30.0)({
                              x: 10.0, 
                              y: 10.0
                          }), 
                          mobWub: Mobs.wibble, 
                          mobBulletImg: mbImg, 
                          mobsImg: mImg, 
                          lastFired: 0.0, 
                          lastMobFired: 1500.0, 
                          gameFinished: false
                      };
                  };
              };
          };
      };
  };
  var bulletSpeed = 10.0;
  var bulletRect = {
      w: 11.0, 
      h: 16.0
  };
  var addPShot = function (inp) {
      return function (g) {
          var spawnBulletAt = function (p) {
              return {
                  x: p.x + 14.0, 
                  y: p.y - 15.0
              };
          };
          var shotGap = inp.frame - g.lastFired >= 100.0;
          var addNewShot = function (gP) {
              return Data_Lens_Setter["%~"](GameState.playerBullets(Data_Profunctor_Strong.strongFn))(Data_Array.cons(spawnBulletAt(gP.playerLoc)))(Data_Lens_Setter[".~"](GameState.lastFired(Data_Profunctor_Strong.strongFn))(inp.frame)(gP));
          };
          var _51 = inp.space && shotGap;
          if (_51) {
              return addNewShot(g);
          };
          if (!_51) {
              return g;
          };
          throw new Error("Failed pattern match at Main line 130, column 1 - line 131, column 1: " + [ _51.constructor.name ]);
      };
  };
  var addMobShots = function (i) {
      return function (g) {
          var addShots = function (gP) {
              return Data_Lens_Setter["++~"](Prelude.semigroupArray)(GameState.mobBullets(Data_Profunctor_Strong.strongFn))(createMobBullets(gP.mobs))(Data_Lens_Setter[".~"](GameState.lastMobFired(Data_Profunctor_Strong.strongFn))(i.frame)(gP));
          };
          var _52 = Mobs.mobsShoot(g.lastMobFired)(i.frame);
          if (_52) {
              return addShots(g);
          };
          if (!_52) {
              return g;
          };
          throw new Error("Failed pattern match at Main line 145, column 1 - line 146, column 1: " + [ _52.constructor.name ]);
      };
  };
  var upState = function (input) {
      var respawnMobs = function (g) {
          var _53 = !Data_Array["null"](g.mobs);
          if (_53) {
              return g;
          };
          if (!_53) {
              return Data_Lens_Setter[".~"](GameState.mobs(Data_Profunctor_Strong.strongFn))(Mobs.addMobs(g.mobCount)(20.0)({
                  x: 5.0, 
                  y: 5.0
              }))(Data_Lens_Setter[".~"](GameState.mobWub(Data_Profunctor_Strong.strongFn))((function () {
                  var _54 = Prelude.mod(Prelude.moduloSemiringNumber)(input.frame)(15.0) === 0.0;
                  if (_54) {
                      return Mobs.wobble;
                  };
                  if (!_54) {
                      return Mobs.wibble;
                  };
                  throw new Error("Failed pattern match: " + [ _54.constructor.name ]);
              })())(g));
          };
          throw new Error("Failed pattern match at Main line 204, column 5 - line 208, column 5: " + [ _53.constructor.name ]);
      };
      var playerShot = function (g) {
          var pHit = (function (_1) {
              return _1 > 0;
          })(Data_Array.length(Data_Array.filter(function (b) {
              return Utils.rectInter(b)(bulletRect)(g.playerLoc)(playerRect);
          })(g.mobBullets)));
          var _55 = new Data_Tuple.Tuple(pHit, g.playerLives);
          if (!_55.value0) {
              return g;
          };
          if (_55.value0) {
              return Data_Lens_Setter[".~"](GameState.playerLoc(Data_Profunctor_Strong.strongFn))(playerStartLoc)(Data_Lens_Setter["+~"](Prelude.semiringInt)(GameState.playerLives(Data_Profunctor_Strong.strongFn))(1)(g));
          };
          throw new Error("Failed pattern match at Main line 161, column 1 - line 162, column 1: " + [ _55.constructor.name ]);
      };
      var movePlayer = function (g) {
          return Data_Lens_Setter["%~"](GameState.playerLoc(Data_Profunctor_Strong.strongFn))(moveCoordByInput(playerMoveDist)(input)(g.screen))(g);
      };
      var movePBullets = Data_Lens_Setter["%~"](GameState.pBullets(Data_Lens_Internal_Wander.wanderFunction))(Data_Lens_Setter["%~"](Sprite._Y(Data_Profunctor_Strong.strongFn))(function (y) {
          return y - bulletSpeed;
      }));
      var moveMBullets = Data_Lens_Setter["%~"](GameState.mBullets(Data_Lens_Internal_Wander.wanderFunction))(Data_Lens_Setter["%~"](Sprite._Y(Data_Profunctor_Strong.strongFn))(function (_4) {
          return _4 + bulletSpeed;
      }));
      var moveEnemyWave = function (g) {
          return Data_Lens_Setter["%~"](GameState.mobs(Data_Profunctor_Strong.strongFn))(Mobs.moveMobs(5.0)(g.mobWub)(g.screen))(g);
      };
      var mobsEscaped = function (g) {
          return Data_Lens_Setter[".~"](GameState.gameFinished(Data_Profunctor_Strong.strongFn))(Data_Foldable.any(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(function (m) {
              return Data_Lens_Getter["^."](m)(function (_68) {
                  return Mobs.mobY(Data_Profunctor_Star.strongStar(Data_Const.functorConst))(Data_Lens_Getter.to(Data_Const.contravariantConst)(function (_0) {
                      return _0 > g.screen.h;
                  })(_68));
              });
          })(g.mobs))(g);
      };
      var isShot = function (g) {
          return function (m) {
              return Data_Foldable.any(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(function (bP) {
                  return Utils.rectInter(bP)(bulletRect)(Data_Lens_Getter["^."](m)(Mobs.mobCoord(Data_Profunctor_Star.strongStar(Data_Const.functorConst))))(mobRect);
              })(g.playerBullets);
          };
      };
      var mobShot = function (g) {
          var score = (function (_2) {
              return _2 * g.mobCount | 0;
          })((function (_3) {
              return _3 * 100 | 0;
          })(Data_Array.length(Data_Array.filter(isShot(g))(g.mobs))));
          var notShot = Data_Array.filter(Prelude.not(Prelude.booleanAlgebraFn(Prelude.booleanAlgebraBoolean))(isShot(g)))(g.mobs);
          return Data_Lens_Setter["+~"](Prelude.semiringInt)(GameState.playerScore(Data_Profunctor_Strong.strongFn))(score)(Data_Lens_Setter[".~"](GameState.mobs(Data_Profunctor_Strong.strongFn))(notShot)(g));
      };
      var bulletGone = Data_Array.filter(function (p) {
          return p.y >= 0.1;
      });
      var pruneBullets = function (g) {
          return Data_Lens_Setter["%~"](GameState.mobBullets(Data_Profunctor_Strong.strongFn))(bulletGone)(Data_Lens_Setter["%~"](GameState.playerBullets(Data_Profunctor_Strong.strongFn))(bulletGone)(g));
      };
      return function (_69) {
          return mobsEscaped(playerShot(respawnMobs(addMobShots(input)(addPShot(input)(pruneBullets(moveEnemyWave(mobShot(movePBullets(moveMBullets(movePlayer(_69)))))))))));
      };
  };
  var main = (function () {
      var mkGoNow = function (g) {
          return function (k) {
              return function __do() {
                  var _5 = Control_Monad_ST.readSTRef(g)();
                  return (function () {
                      if (_5.gameFinished) {
                          return renderGameOver(_5);
                      };
                      if (!_5.gameFinished) {
                          return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_ST.modifySTRef(g)(upState(k)))(render);
                      };
                      throw new Error("Failed pattern match at Main line 288, column 5 - line 289, column 5: " + [ _5.gameFinished.constructor.name ]);
                  })()();
              };
          };
      };
      var runGame = function (st) {
          return function (inp) {
              return function (fs) {
                  return function __do() {
                      var _6 = Control_Monad_ST.newSTRef(st)();
                      return (function () {
                          var game = Signal.sampleOn(fs)(inp);
                          return Signal.runSignal(Prelude["<$>"](Signal.functorSignal)(mkGoNow(_6))(game));
                      })()();
                  };
              };
          };
      };
      return function __do() {
          var _11 = Signal_DOM.animationFrame();
          var _10 = getDocumentNode();
          var _9 = requestContext("canvas")();
          Graphics_Canvas.setFont("36px serif")(_9)();
          var _8 = Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(startState)(Prelude.pure(Control_Monad_Eff.applicativeEff)(_9)))(loadImg("shipImage-normal")(_10)))(loadImg("player-bullet")(_10)))(loadImg("mob-one-img")(_10)))(loadImg("mob-bullet-img")(_10))();
          var _7 = Input.readInput();
          return runGame(_8)(_7)(_11)();
      };
  })();
  exports["main"] = main;
  exports["renderGameOver"] = renderGameOver;
  exports["loadImg"] = loadImg;
  exports["getElemById"] = getElemById;
  exports["getDocumentNode"] = getDocumentNode;
  exports["render"] = render;
  exports["drawElemAt"] = drawElemAt;
  exports["upState"] = upState;
  exports["createMobBullets"] = createMobBullets;
  exports["addMobShots"] = addMobShots;
  exports["addPShot"] = addPShot;
  exports["moveCoordByInput"] = moveCoordByInput;
  exports["requestContext"] = requestContext;
  exports["startState"] = startState;
  exports["playerStartLoc"] = playerStartLoc;
  exports["canvasRect"] = canvasRect;
  exports["bulletSpeed"] = bulletSpeed;
  exports["bulletRect"] = bulletRect;
  exports["mBulletRect"] = mBulletRect;
  exports["mobRect"] = mobRect;
  exports["playerRect"] = playerRect;
  exports["playerMoveDist"] = playerMoveDist;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
